// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.0--rc2
// source: evodoc-giver.proto

package evodoc_giver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DocListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StoreId  string   `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	DeviceId *string  `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	Since    int64    `protobuf:"varint,4,opt,name=since,proto3" json:"since,omitempty"`
	Until    int64    `protobuf:"varint,5,opt,name=until,proto3" json:"until,omitempty"`
	Types    []string `protobuf:"bytes,6,rep,name=types,proto3" json:"types,omitempty"`
	Cursor   *string  `protobuf:"bytes,7,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
}

func (x *DocListRequest) Reset() {
	*x = DocListRequest{}
	mi := &file_evodoc_giver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocListRequest) ProtoMessage() {}

func (x *DocListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocListRequest.ProtoReflect.Descriptor instead.
func (*DocListRequest) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{0}
}

func (x *DocListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DocListRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *DocListRequest) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *DocListRequest) GetSince() int64 {
	if x != nil {
		return x.Since
	}
	return 0
}

func (x *DocListRequest) GetUntil() int64 {
	if x != nil {
		return x.Until
	}
	return 0
}

func (x *DocListRequest) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *DocListRequest) GetCursor() string {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return ""
}

type DocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DocRequest) Reset() {
	*x = DocRequest{}
	mi := &file_evodoc_giver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocRequest) ProtoMessage() {}

func (x *DocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocRequest.ProtoReflect.Descriptor instead.
func (*DocRequest) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{1}
}

func (x *DocRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SellDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type            string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	StoreId         string            `protobuf:"bytes,3,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	CashierId       string            `protobuf:"bytes,4,opt,name=cashier_id,json=cashierId,proto3" json:"cashier_id,omitempty"`
	Date            int64             `protobuf:"varint,5,opt,name=Date,proto3" json:"Date,omitempty"`
	Payments        []*Payment        `protobuf:"bytes,6,rep,name=payments,proto3" json:"payments,omitempty"`
	CustomerEmail   *string           `protobuf:"bytes,7,opt,name=customer_email,json=customerEmail,proto3,oneof" json:"customer_email,omitempty"`
	CustomerPhone   *string           `protobuf:"bytes,8,opt,name=customer_phone,json=customerPhone,proto3,oneof" json:"customer_phone,omitempty"`
	Positions       []*Position       `protobuf:"bytes,9,rep,name=positions,proto3" json:"positions,omitempty"`
	Sum             float64           `protobuf:"fixed64,10,opt,name=sum,proto3" json:"sum,omitempty"`
	PosPrintResults []*PosPrintResult `protobuf:"bytes,11,rep,name=pos_print_results,json=posPrintResults,proto3" json:"pos_print_results,omitempty"`
}

func (x *SellDocResponse) Reset() {
	*x = SellDocResponse{}
	mi := &file_evodoc_giver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SellDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellDocResponse) ProtoMessage() {}

func (x *SellDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellDocResponse.ProtoReflect.Descriptor instead.
func (*SellDocResponse) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{2}
}

func (x *SellDocResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SellDocResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SellDocResponse) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *SellDocResponse) GetCashierId() string {
	if x != nil {
		return x.CashierId
	}
	return ""
}

func (x *SellDocResponse) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *SellDocResponse) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *SellDocResponse) GetCustomerEmail() string {
	if x != nil && x.CustomerEmail != nil {
		return *x.CustomerEmail
	}
	return ""
}

func (x *SellDocResponse) GetCustomerPhone() string {
	if x != nil && x.CustomerPhone != nil {
		return *x.CustomerPhone
	}
	return ""
}

func (x *SellDocResponse) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *SellDocResponse) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *SellDocResponse) GetPosPrintResults() []*PosPrintResult {
	if x != nil {
		return x.PosPrintResults
	}
	return nil
}

type BuyDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type            string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	StoreId         string            `protobuf:"bytes,3,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	CashierId       string            `protobuf:"bytes,4,opt,name=cashier_id,json=cashierId,proto3" json:"cashier_id,omitempty"`
	Date            int64             `protobuf:"varint,5,opt,name=Date,proto3" json:"Date,omitempty"`
	Payments        []*Payment        `protobuf:"bytes,6,rep,name=payments,proto3" json:"payments,omitempty"`
	CustomerEmail   *string           `protobuf:"bytes,7,opt,name=customer_email,json=customerEmail,proto3,oneof" json:"customer_email,omitempty"`
	CustomerPhone   *string           `protobuf:"bytes,8,opt,name=customer_phone,json=customerPhone,proto3,oneof" json:"customer_phone,omitempty"`
	Positions       []*Position       `protobuf:"bytes,9,rep,name=positions,proto3" json:"positions,omitempty"`
	Sum             float64           `protobuf:"fixed64,10,opt,name=sum,proto3" json:"sum,omitempty"`
	PosPrintResults []*PosPrintResult `protobuf:"bytes,11,rep,name=pos_print_results,json=posPrintResults,proto3" json:"pos_print_results,omitempty"`
}

func (x *BuyDocResponse) Reset() {
	*x = BuyDocResponse{}
	mi := &file_evodoc_giver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyDocResponse) ProtoMessage() {}

func (x *BuyDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyDocResponse.ProtoReflect.Descriptor instead.
func (*BuyDocResponse) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{3}
}

func (x *BuyDocResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BuyDocResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BuyDocResponse) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *BuyDocResponse) GetCashierId() string {
	if x != nil {
		return x.CashierId
	}
	return ""
}

func (x *BuyDocResponse) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *BuyDocResponse) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *BuyDocResponse) GetCustomerEmail() string {
	if x != nil && x.CustomerEmail != nil {
		return *x.CustomerEmail
	}
	return ""
}

func (x *BuyDocResponse) GetCustomerPhone() string {
	if x != nil && x.CustomerPhone != nil {
		return *x.CustomerPhone
	}
	return ""
}

func (x *BuyDocResponse) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *BuyDocResponse) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *BuyDocResponse) GetPosPrintResults() []*PosPrintResult {
	if x != nil {
		return x.PosPrintResults
	}
	return nil
}

type OpenTareDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      string              `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	StoreId   string              `protobuf:"bytes,3,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	CashierId string              `protobuf:"bytes,4,opt,name=cashier_id,json=cashierId,proto3" json:"cashier_id,omitempty"`
	Date      int64               `protobuf:"varint,5,opt,name=date,proto3" json:"date,omitempty"`
	Positions []*OpenTarePosition `protobuf:"bytes,9,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *OpenTareDocResponse) Reset() {
	*x = OpenTareDocResponse{}
	mi := &file_evodoc_giver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenTareDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenTareDocResponse) ProtoMessage() {}

func (x *OpenTareDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenTareDocResponse.ProtoReflect.Descriptor instead.
func (*OpenTareDocResponse) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{4}
}

func (x *OpenTareDocResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OpenTareDocResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OpenTareDocResponse) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *OpenTareDocResponse) GetCashierId() string {
	if x != nil {
		return x.CashierId
	}
	return ""
}

func (x *OpenTareDocResponse) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *OpenTareDocResponse) GetPositions() []*OpenTarePosition {
	if x != nil {
		return x.Positions
	}
	return nil
}

type CorrectionDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type            string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	StoreId         string            `protobuf:"bytes,3,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	CashierId       string            `protobuf:"bytes,4,opt,name=cashier_id,json=cashierId,proto3" json:"cashier_id,omitempty"`
	Date            int64             `protobuf:"varint,5,opt,name=date,proto3" json:"date,omitempty"`
	Payments        []*Payment        `protobuf:"bytes,6,rep,name=payments,proto3" json:"payments,omitempty"`
	CustomerEmail   *string           `protobuf:"bytes,7,opt,name=customer_email,json=customerEmail,proto3,oneof" json:"customer_email,omitempty"`
	CustomerPhone   *string           `protobuf:"bytes,8,opt,name=customer_phone,json=customerPhone,proto3,oneof" json:"customer_phone,omitempty"`
	Positions       []*Position       `protobuf:"bytes,9,rep,name=positions,proto3" json:"positions,omitempty"`
	Sum             float64           `protobuf:"fixed64,10,opt,name=sum,proto3" json:"sum,omitempty"`
	PosPrintResults []*PosPrintResult `protobuf:"bytes,11,rep,name=pos_print_results,json=posPrintResults,proto3" json:"pos_print_results,omitempty"`
}

func (x *CorrectionDocResponse) Reset() {
	*x = CorrectionDocResponse{}
	mi := &file_evodoc_giver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CorrectionDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorrectionDocResponse) ProtoMessage() {}

func (x *CorrectionDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorrectionDocResponse.ProtoReflect.Descriptor instead.
func (*CorrectionDocResponse) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{5}
}

func (x *CorrectionDocResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CorrectionDocResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CorrectionDocResponse) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *CorrectionDocResponse) GetCashierId() string {
	if x != nil {
		return x.CashierId
	}
	return ""
}

func (x *CorrectionDocResponse) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *CorrectionDocResponse) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *CorrectionDocResponse) GetCustomerEmail() string {
	if x != nil && x.CustomerEmail != nil {
		return *x.CustomerEmail
	}
	return ""
}

func (x *CorrectionDocResponse) GetCustomerPhone() string {
	if x != nil && x.CustomerPhone != nil {
		return *x.CustomerPhone
	}
	return ""
}

func (x *CorrectionDocResponse) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *CorrectionDocResponse) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *CorrectionDocResponse) GetPosPrintResults() []*PosPrintResult {
	if x != nil {
		return x.PosPrintResults
	}
	return nil
}

type PaybackDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type            string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	StoreId         string            `protobuf:"bytes,3,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	CashierId       string            `protobuf:"bytes,4,opt,name=cashier_id,json=cashierId,proto3" json:"cashier_id,omitempty"`
	Date            int64             `protobuf:"varint,5,opt,name=Date,proto3" json:"Date,omitempty"`
	Payments        []*Payment        `protobuf:"bytes,6,rep,name=payments,proto3" json:"payments,omitempty"`
	CustomerEmail   *string           `protobuf:"bytes,7,opt,name=customer_email,json=customerEmail,proto3,oneof" json:"customer_email,omitempty"`
	CustomerPhone   *string           `protobuf:"bytes,8,opt,name=customer_phone,json=customerPhone,proto3,oneof" json:"customer_phone,omitempty"`
	Positions       []*Position       `protobuf:"bytes,9,rep,name=positions,proto3" json:"positions,omitempty"`
	Sum             float64           `protobuf:"fixed64,10,opt,name=sum,proto3" json:"sum,omitempty"`
	PosPrintResults []*PosPrintResult `protobuf:"bytes,11,rep,name=pos_print_results,json=posPrintResults,proto3" json:"pos_print_results,omitempty"`
	BaseDocId       *string           `protobuf:"bytes,12,opt,name=base_doc_id,json=baseDocId,proto3,oneof" json:"base_doc_id,omitempty"`
}

func (x *PaybackDocResponse) Reset() {
	*x = PaybackDocResponse{}
	mi := &file_evodoc_giver_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaybackDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaybackDocResponse) ProtoMessage() {}

func (x *PaybackDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaybackDocResponse.ProtoReflect.Descriptor instead.
func (*PaybackDocResponse) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{6}
}

func (x *PaybackDocResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaybackDocResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PaybackDocResponse) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *PaybackDocResponse) GetCashierId() string {
	if x != nil {
		return x.CashierId
	}
	return ""
}

func (x *PaybackDocResponse) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *PaybackDocResponse) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *PaybackDocResponse) GetCustomerEmail() string {
	if x != nil && x.CustomerEmail != nil {
		return *x.CustomerEmail
	}
	return ""
}

func (x *PaybackDocResponse) GetCustomerPhone() string {
	if x != nil && x.CustomerPhone != nil {
		return *x.CustomerPhone
	}
	return ""
}

func (x *PaybackDocResponse) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *PaybackDocResponse) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *PaybackDocResponse) GetPosPrintResults() []*PosPrintResult {
	if x != nil {
		return x.PosPrintResults
	}
	return nil
}

func (x *PaybackDocResponse) GetBaseDocId() string {
	if x != nil && x.BaseDocId != nil {
		return *x.BaseDocId
	}
	return ""
}

type BuybackDocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type            string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	StoreId         string            `protobuf:"bytes,3,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	CashierId       string            `protobuf:"bytes,4,opt,name=cashier_id,json=cashierId,proto3" json:"cashier_id,omitempty"`
	Date            int64             `protobuf:"varint,5,opt,name=Date,proto3" json:"Date,omitempty"`
	Payments        []*Payment        `protobuf:"bytes,6,rep,name=payments,proto3" json:"payments,omitempty"`
	CustomerEmail   *string           `protobuf:"bytes,7,opt,name=customer_email,json=customerEmail,proto3,oneof" json:"customer_email,omitempty"`
	CustomerPhone   *string           `protobuf:"bytes,8,opt,name=customer_phone,json=customerPhone,proto3,oneof" json:"customer_phone,omitempty"`
	Positions       []*Position       `protobuf:"bytes,9,rep,name=positions,proto3" json:"positions,omitempty"`
	Sum             float64           `protobuf:"fixed64,10,opt,name=sum,proto3" json:"sum,omitempty"`
	PosPrintResults []*PosPrintResult `protobuf:"bytes,11,rep,name=pos_print_results,json=posPrintResults,proto3" json:"pos_print_results,omitempty"`
	BaseDocId       *string           `protobuf:"bytes,12,opt,name=base_doc_id,json=baseDocId,proto3,oneof" json:"base_doc_id,omitempty"`
}

func (x *BuybackDocResponse) Reset() {
	*x = BuybackDocResponse{}
	mi := &file_evodoc_giver_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuybackDocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackDocResponse) ProtoMessage() {}

func (x *BuybackDocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackDocResponse.ProtoReflect.Descriptor instead.
func (*BuybackDocResponse) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{7}
}

func (x *BuybackDocResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BuybackDocResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BuybackDocResponse) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *BuybackDocResponse) GetCashierId() string {
	if x != nil {
		return x.CashierId
	}
	return ""
}

func (x *BuybackDocResponse) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *BuybackDocResponse) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *BuybackDocResponse) GetCustomerEmail() string {
	if x != nil && x.CustomerEmail != nil {
		return *x.CustomerEmail
	}
	return ""
}

func (x *BuybackDocResponse) GetCustomerPhone() string {
	if x != nil && x.CustomerPhone != nil {
		return *x.CustomerPhone
	}
	return ""
}

func (x *BuybackDocResponse) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *BuybackDocResponse) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *BuybackDocResponse) GetPosPrintResults() []*PosPrintResult {
	if x != nil {
		return x.PosPrintResults
	}
	return nil
}

func (x *BuybackDocResponse) GetBaseDocId() string {
	if x != nil && x.BaseDocId != nil {
		return *x.BaseDocId
	}
	return ""
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Sum     float64 `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`
	AppName *string `protobuf:"bytes,3,opt,name=app_name,json=appName,proto3,oneof" json:"app_name,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	mi := &file_evodoc_giver_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{8}
}

func (x *Payment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Payment) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *Payment) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        *string `protobuf:"bytes,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
	TareVolume  string  `protobuf:"bytes,2,opt,name=tare_volume,json=tareVolume,proto3" json:"tare_volume,omitempty"`
	Sum         string  `protobuf:"bytes,3,opt,name=sum,proto3" json:"sum,omitempty"`
	ResultPrice string  `protobuf:"bytes,4,opt,name=result_price,json=resultPrice,proto3" json:"result_price,omitempty"`
	Quantity    string  `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Measure     *string `protobuf:"bytes,6,opt,name=measure,proto3,oneof" json:"measure,omitempty"`
	Name        *string `protobuf:"bytes,7,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_evodoc_giver_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{9}
}

func (x *Position) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *Position) GetTareVolume() string {
	if x != nil {
		return x.TareVolume
	}
	return ""
}

func (x *Position) GetSum() string {
	if x != nil {
		return x.Sum
	}
	return ""
}

func (x *Position) GetResultPrice() string {
	if x != nil {
		return x.ResultPrice
	}
	return ""
}

func (x *Position) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *Position) GetMeasure() string {
	if x != nil && x.Measure != nil {
		return *x.Measure
	}
	return ""
}

func (x *Position) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type OpenTarePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                   *string `protobuf:"bytes,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
	TareVolume             string  `protobuf:"bytes,2,opt,name=tare_volume,json=tareVolume,proto3" json:"tare_volume,omitempty"`
	Sum                    float64 `protobuf:"fixed64,3,opt,name=sum,proto3" json:"sum,omitempty"`
	Price                  float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Quantity               string  `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Measure                *string `protobuf:"bytes,6,opt,name=measure,proto3,oneof" json:"measure,omitempty"`
	Name                   *string `protobuf:"bytes,7,opt,name=name,proto3,oneof" json:"name,omitempty"`
	InitialQuantity        string  `protobuf:"bytes,8,opt,name=initial_quantity,json=initialQuantity,proto3" json:"initial_quantity,omitempty"`
	AlcoholProductKindCode *string `protobuf:"bytes,9,opt,name=alcohol_product_kind_code,json=alcoholProductKindCode,proto3,oneof" json:"alcohol_product_kind_code,omitempty"`
	AlcoholByVolume        *string `protobuf:"bytes,10,opt,name=alcohol_by_volume,json=alcoholByVolume,proto3,oneof" json:"alcohol_by_volume,omitempty"`
	ProductId              string  `protobuf:"bytes,11,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Barcode                *string `protobuf:"bytes,12,opt,name=barcode,proto3,oneof" json:"barcode,omitempty"`
}

func (x *OpenTarePosition) Reset() {
	*x = OpenTarePosition{}
	mi := &file_evodoc_giver_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenTarePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenTarePosition) ProtoMessage() {}

func (x *OpenTarePosition) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenTarePosition.ProtoReflect.Descriptor instead.
func (*OpenTarePosition) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{10}
}

func (x *OpenTarePosition) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *OpenTarePosition) GetTareVolume() string {
	if x != nil {
		return x.TareVolume
	}
	return ""
}

func (x *OpenTarePosition) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *OpenTarePosition) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OpenTarePosition) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *OpenTarePosition) GetMeasure() string {
	if x != nil && x.Measure != nil {
		return *x.Measure
	}
	return ""
}

func (x *OpenTarePosition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *OpenTarePosition) GetInitialQuantity() string {
	if x != nil {
		return x.InitialQuantity
	}
	return ""
}

func (x *OpenTarePosition) GetAlcoholProductKindCode() string {
	if x != nil && x.AlcoholProductKindCode != nil {
		return *x.AlcoholProductKindCode
	}
	return ""
}

func (x *OpenTarePosition) GetAlcoholByVolume() string {
	if x != nil && x.AlcoholByVolume != nil {
		return *x.AlcoholByVolume
	}
	return ""
}

func (x *OpenTarePosition) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OpenTarePosition) GetBarcode() string {
	if x != nil && x.Barcode != nil {
		return *x.Barcode
	}
	return ""
}

type PosPrintResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionNumber        int64   `protobuf:"varint,1,opt,name=session_number,json=sessionNumber,proto3" json:"session_number,omitempty"`
	FiscalDocumentNumber int64   `protobuf:"varint,2,opt,name=fiscal_document_number,json=fiscalDocumentNumber,proto3" json:"fiscal_document_number,omitempty"`
	ReceiptNumber        int64   `protobuf:"varint,3,opt,name=receipt_number,json=receiptNumber,proto3" json:"receipt_number,omitempty"`
	DocumentNumber       int64   `protobuf:"varint,4,opt,name=document_number,json=documentNumber,proto3" json:"document_number,omitempty"`
	CheckSum             float64 `protobuf:"fixed64,5,opt,name=check_sum,json=checkSum,proto3" json:"check_sum,omitempty"`
	KktRegNumber         string  `protobuf:"bytes,6,opt,name=kkt_reg_number,json=kktRegNumber,proto3" json:"kkt_reg_number,omitempty"`
	ReceiptDate          int64   `protobuf:"varint,7,opt,name=receipt_date,json=receiptDate,proto3" json:"receipt_date,omitempty"`
	KktSerialNumber      string  `protobuf:"bytes,8,opt,name=kkt_serial_number,json=kktSerialNumber,proto3" json:"kkt_serial_number,omitempty"`
	FiscalSignDocNumber  string  `protobuf:"bytes,9,opt,name=fiscal_sign_doc_number,json=fiscalSignDocNumber,proto3" json:"fiscal_sign_doc_number,omitempty"`
	FnSerialNumber       string  `protobuf:"bytes,10,opt,name=fn_serial_number,json=fnSerialNumber,proto3" json:"fn_serial_number,omitempty"`
}

func (x *PosPrintResult) Reset() {
	*x = PosPrintResult{}
	mi := &file_evodoc_giver_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PosPrintResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosPrintResult) ProtoMessage() {}

func (x *PosPrintResult) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosPrintResult.ProtoReflect.Descriptor instead.
func (*PosPrintResult) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{11}
}

func (x *PosPrintResult) GetSessionNumber() int64 {
	if x != nil {
		return x.SessionNumber
	}
	return 0
}

func (x *PosPrintResult) GetFiscalDocumentNumber() int64 {
	if x != nil {
		return x.FiscalDocumentNumber
	}
	return 0
}

func (x *PosPrintResult) GetReceiptNumber() int64 {
	if x != nil {
		return x.ReceiptNumber
	}
	return 0
}

func (x *PosPrintResult) GetDocumentNumber() int64 {
	if x != nil {
		return x.DocumentNumber
	}
	return 0
}

func (x *PosPrintResult) GetCheckSum() float64 {
	if x != nil {
		return x.CheckSum
	}
	return 0
}

func (x *PosPrintResult) GetKktRegNumber() string {
	if x != nil {
		return x.KktRegNumber
	}
	return ""
}

func (x *PosPrintResult) GetReceiptDate() int64 {
	if x != nil {
		return x.ReceiptDate
	}
	return 0
}

func (x *PosPrintResult) GetKktSerialNumber() string {
	if x != nil {
		return x.KktSerialNumber
	}
	return ""
}

func (x *PosPrintResult) GetFiscalSignDocNumber() string {
	if x != nil {
		return x.FiscalSignDocNumber
	}
	return ""
}

func (x *PosPrintResult) GetFnSerialNumber() string {
	if x != nil {
		return x.FnSerialNumber
	}
	return ""
}

type DocListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docs   []*anypb.Any `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
	Cursor string       `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *DocListResponse) Reset() {
	*x = DocListResponse{}
	mi := &file_evodoc_giver_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocListResponse) ProtoMessage() {}

func (x *DocListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocListResponse.ProtoReflect.Descriptor instead.
func (*DocListResponse) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{12}
}

func (x *DocListResponse) GetDocs() []*anypb.Any {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *DocListResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type DocTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DocTypeResponse) Reset() {
	*x = DocTypeResponse{}
	mi := &file_evodoc_giver_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocTypeResponse) ProtoMessage() {}

func (x *DocTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evodoc_giver_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocTypeResponse.ProtoReflect.Descriptor instead.
func (*DocTypeResponse) Descriptor() ([]byte, []int) {
	return file_evodoc_giver_proto_rawDescGZIP(), []int{13}
}

func (x *DocTypeResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_evodoc_giver_proto protoreflect.FileDescriptor

var file_evodoc_giver_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x2d, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76,
	0x65, 0x72, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb, 0x01,
	0x0a, 0x0e, 0x44, 0x6f, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x74,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x1c, 0x0a, 0x0a, 0x44,
	0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc6, 0x03, 0x0a, 0x0f, 0x53, 0x65,
	0x6c, 0x6c, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x31, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73,
	0x75, 0x6d, 0x12, 0x48, 0x0a, 0x11, 0x70, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x70, 0x6f, 0x73,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x22, 0xc5, 0x03, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x6f, 0x64,
	0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67,
	0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x48, 0x0a, 0x11, 0x70, 0x6f,
	0x73, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67,
	0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x0f, 0x70, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x4f,
	0x70, 0x65, 0x6e, 0x54, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63,
	0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x72, 0x65, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xcc, 0x03, 0x0a, 0x15, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31,
	0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65,
	0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75,
	0x6d, 0x12, 0x48, 0x0a, 0x11, 0x70, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65,
	0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x70, 0x6f, 0x73, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x22, 0xfe, 0x03, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x6f, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x69,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x73,
	0x68, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x6f, 0x64, 0x6f,
	0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x48, 0x0a,
	0x11, 0x70, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x6f, 0x64, 0x6f,
	0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x70, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x6f, 0x63, 0x5f,
	0x69, 0x64, 0x22, 0xfe, 0x03, 0x0a, 0x12, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x6f,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61,
	0x73, 0x68, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a,
	0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x6f, 0x64,
	0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x48,
	0x0a, 0x11, 0x70, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x6f, 0x64,
	0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x70, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x09, 0x62, 0x61, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x6f, 0x63,
	0x5f, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x73, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xeb, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x65, 0x5f,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x80, 0x04, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x19, 0x61, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x16, 0x61, 0x6c, 0x63, 0x6f,
	0x68, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x61, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c,
	0x5f, 0x62, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x0f, 0x61, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x42, 0x79, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x61, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x61, 0x6c, 0x63, 0x6f, 0x68, 0x6f, 0x6c, 0x5f, 0x62, 0x79, 0x5f,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xae, 0x03, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x16,
	0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x66, 0x69,
	0x73, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x12,
	0x24, 0x0a, 0x0e, 0x6b, 0x6b, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x6b, 0x74, 0x52, 0x65, 0x67, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6b, 0x6b, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6b, 0x6b, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x16, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e,
	0x44, 0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x6e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x6f, 0x63, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x25, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x32,
	0x8c, 0x01, 0x0a, 0x0b, 0x45, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x47, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x65, 0x76, 0x6f,
	0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x76, 0x6f, 0x64, 0x6f,
	0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x18,
	0x2e, 0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6f,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x42, 0x34,
	0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x72,
	0x65, 0x6d, 0x65, 0x74, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x76, 0x6f, 0x64, 0x6f, 0x63, 0x2d, 0x67,
	0x69, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_evodoc_giver_proto_rawDescOnce sync.Once
	file_evodoc_giver_proto_rawDescData = file_evodoc_giver_proto_rawDesc
)

func file_evodoc_giver_proto_rawDescGZIP() []byte {
	file_evodoc_giver_proto_rawDescOnce.Do(func() {
		file_evodoc_giver_proto_rawDescData = protoimpl.X.CompressGZIP(file_evodoc_giver_proto_rawDescData)
	})
	return file_evodoc_giver_proto_rawDescData
}

var file_evodoc_giver_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_evodoc_giver_proto_goTypes = []any{
	(*DocListRequest)(nil),        // 0: evodoc_giver.DocListRequest
	(*DocRequest)(nil),            // 1: evodoc_giver.DocRequest
	(*SellDocResponse)(nil),       // 2: evodoc_giver.SellDocResponse
	(*BuyDocResponse)(nil),        // 3: evodoc_giver.BuyDocResponse
	(*OpenTareDocResponse)(nil),   // 4: evodoc_giver.OpenTareDocResponse
	(*CorrectionDocResponse)(nil), // 5: evodoc_giver.CorrectionDocResponse
	(*PaybackDocResponse)(nil),    // 6: evodoc_giver.PaybackDocResponse
	(*BuybackDocResponse)(nil),    // 7: evodoc_giver.BuybackDocResponse
	(*Payment)(nil),               // 8: evodoc_giver.Payment
	(*Position)(nil),              // 9: evodoc_giver.Position
	(*OpenTarePosition)(nil),      // 10: evodoc_giver.OpenTarePosition
	(*PosPrintResult)(nil),        // 11: evodoc_giver.PosPrintResult
	(*DocListResponse)(nil),       // 12: evodoc_giver.DocListResponse
	(*DocTypeResponse)(nil),       // 13: evodoc_giver.DocTypeResponse
	(*anypb.Any)(nil),             // 14: google.protobuf.Any
}
var file_evodoc_giver_proto_depIdxs = []int32{
	8,  // 0: evodoc_giver.SellDocResponse.payments:type_name -> evodoc_giver.Payment
	9,  // 1: evodoc_giver.SellDocResponse.positions:type_name -> evodoc_giver.Position
	11, // 2: evodoc_giver.SellDocResponse.pos_print_results:type_name -> evodoc_giver.PosPrintResult
	8,  // 3: evodoc_giver.BuyDocResponse.payments:type_name -> evodoc_giver.Payment
	9,  // 4: evodoc_giver.BuyDocResponse.positions:type_name -> evodoc_giver.Position
	11, // 5: evodoc_giver.BuyDocResponse.pos_print_results:type_name -> evodoc_giver.PosPrintResult
	10, // 6: evodoc_giver.OpenTareDocResponse.positions:type_name -> evodoc_giver.OpenTarePosition
	8,  // 7: evodoc_giver.CorrectionDocResponse.payments:type_name -> evodoc_giver.Payment
	9,  // 8: evodoc_giver.CorrectionDocResponse.positions:type_name -> evodoc_giver.Position
	11, // 9: evodoc_giver.CorrectionDocResponse.pos_print_results:type_name -> evodoc_giver.PosPrintResult
	8,  // 10: evodoc_giver.PaybackDocResponse.payments:type_name -> evodoc_giver.Payment
	9,  // 11: evodoc_giver.PaybackDocResponse.positions:type_name -> evodoc_giver.Position
	11, // 12: evodoc_giver.PaybackDocResponse.pos_print_results:type_name -> evodoc_giver.PosPrintResult
	8,  // 13: evodoc_giver.BuybackDocResponse.payments:type_name -> evodoc_giver.Payment
	9,  // 14: evodoc_giver.BuybackDocResponse.positions:type_name -> evodoc_giver.Position
	11, // 15: evodoc_giver.BuybackDocResponse.pos_print_results:type_name -> evodoc_giver.PosPrintResult
	14, // 16: evodoc_giver.DocListResponse.docs:type_name -> google.protobuf.Any
	0,  // 17: evodoc_giver.EvodocGiver.GetList:input_type -> evodoc_giver.DocListRequest
	1,  // 18: evodoc_giver.EvodocGiver.Get:input_type -> evodoc_giver.DocRequest
	12, // 19: evodoc_giver.EvodocGiver.GetList:output_type -> evodoc_giver.DocListResponse
	14, // 20: evodoc_giver.EvodocGiver.Get:output_type -> google.protobuf.Any
	19, // [19:21] is the sub-list for method output_type
	17, // [17:19] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_evodoc_giver_proto_init() }
func file_evodoc_giver_proto_init() {
	if File_evodoc_giver_proto != nil {
		return
	}
	file_evodoc_giver_proto_msgTypes[0].OneofWrappers = []any{}
	file_evodoc_giver_proto_msgTypes[2].OneofWrappers = []any{}
	file_evodoc_giver_proto_msgTypes[3].OneofWrappers = []any{}
	file_evodoc_giver_proto_msgTypes[5].OneofWrappers = []any{}
	file_evodoc_giver_proto_msgTypes[6].OneofWrappers = []any{}
	file_evodoc_giver_proto_msgTypes[7].OneofWrappers = []any{}
	file_evodoc_giver_proto_msgTypes[8].OneofWrappers = []any{}
	file_evodoc_giver_proto_msgTypes[9].OneofWrappers = []any{}
	file_evodoc_giver_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_evodoc_giver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_evodoc_giver_proto_goTypes,
		DependencyIndexes: file_evodoc_giver_proto_depIdxs,
		MessageInfos:      file_evodoc_giver_proto_msgTypes,
	}.Build()
	File_evodoc_giver_proto = out.File
	file_evodoc_giver_proto_rawDesc = nil
	file_evodoc_giver_proto_goTypes = nil
	file_evodoc_giver_proto_depIdxs = nil
}
