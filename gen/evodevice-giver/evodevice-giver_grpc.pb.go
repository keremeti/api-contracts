// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.1
// source: evodevice-giver.proto

package evodevice_giver

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	GetStores_GetList_FullMethodName = "/auth.GetStores/GetList"
)

// GetStoresClient is the client API for GetStores service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GetStoresClient interface {
	GetList(ctx context.Context, in *DeviceRequest, opts ...grpc.CallOption) (*DeviceResponse, error)
}

type getStoresClient struct {
	cc grpc.ClientConnInterface
}

func NewGetStoresClient(cc grpc.ClientConnInterface) GetStoresClient {
	return &getStoresClient{cc}
}

func (c *getStoresClient) GetList(ctx context.Context, in *DeviceRequest, opts ...grpc.CallOption) (*DeviceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeviceResponse)
	err := c.cc.Invoke(ctx, GetStores_GetList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetStoresServer is the server API for GetStores service.
// All implementations must embed UnimplementedGetStoresServer
// for forward compatibility
type GetStoresServer interface {
	GetList(context.Context, *DeviceRequest) (*DeviceResponse, error)
	mustEmbedUnimplementedGetStoresServer()
}

// UnimplementedGetStoresServer must be embedded to have forward compatible implementations.
type UnimplementedGetStoresServer struct {
}

func (UnimplementedGetStoresServer) GetList(context.Context, *DeviceRequest) (*DeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetList not implemented")
}
func (UnimplementedGetStoresServer) mustEmbedUnimplementedGetStoresServer() {}

// UnsafeGetStoresServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GetStoresServer will
// result in compilation errors.
type UnsafeGetStoresServer interface {
	mustEmbedUnimplementedGetStoresServer()
}

func RegisterGetStoresServer(s grpc.ServiceRegistrar, srv GetStoresServer) {
	s.RegisterService(&GetStores_ServiceDesc, srv)
}

func _GetStores_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetStoresServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GetStores_GetList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetStoresServer).GetList(ctx, req.(*DeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GetStores_ServiceDesc is the grpc.ServiceDesc for GetStores service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GetStores_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "auth.GetStores",
	HandlerType: (*GetStoresServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _GetStores_GetList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "evodevice-giver.proto",
}
